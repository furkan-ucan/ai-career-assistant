# .coderabbit.yaml - Akıllı Kariyer Asistanı için Gelişmiş ve Optimize Edilmiş Yapılandırma
# Coderabbit Best Practices v2.3'e göre hazırlanmış ve şema ile doğrulanmıştır.

# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json

# İncelemelerin dilini İngilizce olarak ayarla.
language: "en"

# İnceleme süreci için genel ayarlar
reviews:
  # 'chill' profili, sadece en önemli mimari ve mantıksal konulara odaklanmasını sağlar.
  profile: "chill"

  # AI'ın PR'ları bloke etmesini istemiyoruz, sadece yorum yapsın.
  request_changes_workflow: false

  # Her PR'ın başına, yapılan değişiklikleri özetleyen bir AI yorumu ekle.
  high_level_summary: true

  # Pull Request açıldığında otomatik olarak incelemeyi başlat.
  auto_review:
    enabled: true

    # Hedef dal ne olursa olsun TÜM PR'ları incele.
    # ÖNEMLİ: Bu ayarın çalışması için Coderabbit GitHub App ayarlarında
    # repozitör erişiminin doğru yapılandırıldığından emin ol.
    # Boş bırakmak yerine, en yaygın dalları belirtmek daha güvenli bir başlangıç olabilir.
    base_branches:
      - "main"
      - "master"
      - "develop"
      - "feature/*"
      - "bugfix/*"
      # Yeni feature dallarının hedeflediği ana dallar buraya eklenebilir.

    # ⭐ DÜZELTME: Doğru anahtar adı 'ignore_title_keywords' olmalıdır.
    ignore_title_keywords:
      - "WIP"
      - "[skip-review]"
      - "docs:"
      - "chore:"

    # Taslak (Draft) PR'ları da incele, erken geri bildirim için harika.
    drafts: true

  # ÖNCE neyin dahil edileceğini, SONRA neyin hariç tutulacağını belirt.
  path_filters:
    # 1. Adım: Önce incelemek istediğimiz ana yolları dahil et.
    - "src/**/*.py"
    - "tests/**/*.py"
    - "main.py"
    - "cli.py"

    # 2. Adım: Şimdi bu dahil edilen yollardan istenmeyenleri hariç tut.
    - "!**/*.md"
    - "!docs/**"
    - "!data/**"
    - "!logs/**"
    - "!config.yaml"
    - "!pyproject.toml"
    - "!Makefile"
    - "!quality-check.ps1"
    - "!.gitignore"
    - "!.pre-commit-config.yaml"
    - "!tests/fixtures/**"

  # Dosya yoluna göre AI'a özel talimatlar ver.
  path_instructions:
    - path: "src/**/*.py"
      instructions: |
        **Role:** Senior Python Architect. Your focus is on SOLID principles, clean code, and robustness.
        - **Single Responsibility Principle (SRP):** Is this module or function doing more than one job?
        - **Error Handling:** Is the code resilient against `None` values? Is `logger.exception` used correctly?
        - **Project Standards:** Are file paths handled using `pathlib`? Is the forbidden `print()` function used?

    - path: "tests/**/*.py"
      instructions: |
        **Role:** Senior QA Engineer. Your focus is on test quality and readability.
        - **Pytest Best Practices:** Do the tests follow best practices (fixtures, `parametrize`)?
        - **Clarity:** Is the test function's name clear and descriptive?
        - **Isolation:** Are mocks used correctly to isolate unit tests?

    - path: "main.py"
      instructions: |
        **Role:** System Architect. Ensure this file remains a simple orchestrator.
        - Has new business logic been added here? If so, recommend moving it to a module in `src/`.

# Coderabbit'in kendi dahili linter'larını kapalı tutuyoruz.
tools:
  ruff:
    enabled: false
  shellcheck:
    enabled: false
  markdownlint:
    enabled: false
