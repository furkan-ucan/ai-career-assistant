[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "kariyer-asistani"
version = "1.0.0"
description = "Akıllı Kariyer Asistanı - AI tabanlı iş arama ve eşleştirme sistemi"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [{ name = "Furkan", email = "furkan.ucann@yandex.com" }]
keywords = ["ai", "career", "job-search", "nlp", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "python-jobspy>=1.1.80",
    "google-generativeai>=0.8.3",
    "chromadb>=1.0.12",
    "pandas>=2.2.2",
    "numpy>=1.26.3",
    "python-dotenv>=1.0.1",
    "PyYAML>=6.0.1",
    "tqdm>=4.66.1",
    "sentence-transformers>=3.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.8.0",
    "pre-commit>=3.0.0",
    "ruff>=0.12.0",
    "bandit>=1.8.0",
]

[project.urls]
Homepage = "https://github.com/furkan-ucan/kariyer-asistani"
"Bug Reports" = "https://github.com/furkan-ucan/kariyer-asistani/issues"
"Source" = "https://github.com/furkan-ucan/kariyer-asistani"

[project.scripts]
kariyer-asistani = "main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src", "src.*"]

[tool.setuptools.package-dir]
"" = "."

[tool.ruff]
line-length = 119
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # Line too long (black handles this)
    "B008", # Do not perform function calls in argument defaults
    "B904", # Allow bare except
]
exclude = [
    ".git",
    "__pycache__",
    "kariyer-asistani-env",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
    "logs",
    "data/chromadb",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
ignore_missing_imports = true
strict_optional = false
exclude = ["kariyer-asistani-env/", "build/", "dist/"]

# External library ignores
[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "chromadb.*",
    "jobspy.*",
    "tqdm.*",
    "google.*",
    "sentence_transformers.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "kariyer-asistani-env", ".venv", "build", "dist"]
skips = [
    "B101",
    "B603",
] # Skip assert_used and subprocess_without_shell_equals_true
